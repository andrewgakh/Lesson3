# Исходный текст

list_text=['Все счастливые семьи похожи друг на друга, каждая несчастливая семья несчастлива по-своему.',
         'Все смешалось в доме Облонских. Жена узнала, что муж был в связи с бывшею в их доме француженкою-гувернанткой, и объявила мужу, что не может жить с ним в одном доме. Положение ',
         'это продолжалось уже третий день и мучительно чувствовалось и самими супругами, и всеми членами семьи, и домочадцами. Все члены семьи и домочадцы чувствовали, что нет смысла в',
          'их сожительстве и что на каждом постоялом дворе случайно сошедшиеся люди более связаны между собой, чем они, члены семьи и домочадцы Облонских. Жена не выходила из своих ',
          'комнат, мужа третий день не было дома. Дети бегали по всему дому, как потерянные; англичанка поссорилась с экономкой и написала записку приятельнице, прося приискать ей новое',
          'место; повар ушел вчера со двора, во время самого обеда; черная кухарка и кучер просили расчета.',
          'На третий день после ссоры князь Степан Аркадьич Облонский — Стива, как его звали в свете, — в обычный час, то есть в восемь часов утра, проснулся не в спальне жены, а в своем',
          'кабинете, на сафьянном диване. Он повернул свое полное, выхоленное тело на пружинах дивана, как бы желая опять заснуть надолго, с другой стороны крепко обнял подушку и',
          'прижался к ней щекой; но вдруг вскочил, сел на диван и открыл глаза.',
          '«Да, да, как это было? — думал он, вспоминая сон. — Да, как это было? Да! Алабин давал обед в Дармштадте; нет, не в Дармштадте, а что-то американское. Да, но там Дармштадт был',
          'в Америке. Да, Алабин давал обед на стеклянных столах, да, — и столы пели: Il mio tesoro 1 и не Il mio tesoro, а что-то лучше, и какие-то маленькие графинчики, и они же',
          'женщины», — вспоминал он.',
          'Глаза Степана Аркадьича весело заблестели, и он задумался, улыбаясь. «Да, хорошо было, очень хорошо. Много еще что-то там было отличного, да не скажешь словами и мыслями даже',
          'наяву не выразишь». И, заметив полосу света, пробившуюся сбоку одной из суконных стор, он весело скинул ноги с дивана, отыскал ими шитые женой (подарок ко дню рождения в',
          'прошлом году), обделанные в золотистый сафьян туфли, и по старой, девятилетней привычке, не вставая, потянулся рукой к тому месту, где в спальне у него висел халат. И тут он',
          'вспомнил вдруг, как и почему он спит не в спальне жены, а в кабинете; улыбка исчезла с его лица, он сморщил лоб.',
          '«Ах, ах, ах! Ааа!..» — замычал он, вспоминая все, что было. И его воображению представились опять все подробности ссоры с женою, вся безвыходность его положения и мучительнее',
          'всего собственная вина его.',
          '«Да! она не простит и не может простить. И всего ужаснее то, что виной всему я, виной я, а не виноват. В этом-то вся драма, — думал он. — Ах, ах, ах!» — приговаривал он с',
          'отчаянием, вспоминая самые тяжелые для себя впечатления из этой ссоры.',
          'Неприятнее всего была та первая минута, когда он, вернувшись из театра, веселый и довольный, с огромною грушей для жены в руке, не нашел жены в гостиной; к удивлению, не нашел ее',
          'и в кабинете и, наконец, увидал ее в спальне с несчастною, открывшею все, запиской в руке.',
          'Она, эта вечно озабоченная, и хлопотливая, и недалекая, какою он считал ее, Долли, неподвижно сидела с запиской в руке и с выражением ужаса, отчаяния и гнева смотрела на него.',
          '— Что это? это? — спрашивала она, указывая на записку.',
          'И при этом воспоминании, как это часто бывает, мучало Степана Аркадьича не столько самое событие, сколько то, как он ответил на эти слова жены.',
          'С ним случилось в эту минуту то, что случается с людьми, когда они неожиданно уличены в чем-нибудь слишком постыдном. Он не сумел приготовить свое лицо к тому положению, в',
          'которое он становился перед женой после открытия его вины. Вместо того чтоб оскорбиться, отрекаться, оправдываться, просить прощения, оставаться даже равнодушным — все было бы',
          'лучше того, что он сделал! — его лицо совершенно невольно («рефлексы головного мозга», — подумал Степан Аркадьич, который любил физиологию), совершенно невольно вдруг',
          'улыбнулось привычною, доброю и потому глупою улыбкой.',
          'Эту глупую улыбку он не мог простить себе. Увидав эту улыбку, Долли вздрогнула, как от физической боли, разразилась, со свойственною ей горячностью, потоком жестоких слов и',
          'выбежала из комнаты. С тех пор она не хотела видеть мужа.']

# **************************************************************************************************************
# 1) Методами строк очистить текст от знаков препинания.
# **************************************************************************************************************

# Счетчик строк в тексте(списке)
str_txt=0
list_words=[]
list_tmp=[]
print('Задача 1. ')

# Перебираем строки из списка
while str_txt < len(list_text):
        str_1 = list_text[str_txt]
        print('Номер строки текста(списка)', str_txt)
        print('Исходная строка: ')
        print(str_1)

        str_form = str_1

        count = str_form.count(',')
        str_form = str_form.replace(',', '', count)

        count = str_form.count('.')
        str_form = str_form.replace('.', '', count)

        count = str_form.count('-')
        str_form = str_form.replace('-', '', count)

        count = str_form.count('«')
        str_form = str_form.replace('«', '', count)

        count = str_form.count('»')
        str_form = str_form.replace('»', '', count)

        count = str_form.count('!')
        str_form = str_form.replace('!', '', count)

        count = str_form.count('?')
        str_form = str_form.replace('?', '', count)

        count = str_form.count(';')
        str_form = str_form.replace(';', '', count)

        count = str_form.count(':')
        str_form = str_form.replace(':', '', count)

        count = str_form.count('—')
        str_form = str_form.replace('—', '', count)

        print()
        print('Строка без знаков препинания:')
        print(str_form)

# **************************************************************************************************************
# 2) сформировать list со словами (split);
# **************************************************************************************************************
        list_tmp = str_form.split()
        list_words = list_words + list_tmp
        print()
        str_txt+=1

print('Задача 2. ')
print('Список слов, list_word, сформированный из исходного текста.')
print(list_words)

# **************************************************************************************************************
# 2) сформировать list со словами (split);
# **************************************************************************************************************

# # Счетчик строк в тексте(списке), инициализируем новый список слов
# str_txt=0
# list_words=[]
# list_tmp=[]
#
# # Перебираем строки из списка
# while str_txt < len(list_text):
#
#         str = list_text[str_txt]
#         list_tmp = str.split()
#         list_words = list_words + list_tmp
#
#         str_txt+=1
# print()
# print('Список слов, list_word, сформированный из исходного текста.')
# print()
# print(list_words)

# **************************************************************************************************************
# 3) привести все слова к нижнему регистру (map);
# **************************************************************************************************************
print()
print('Задача 3 часть 1.')

# Приводим все слова к нижнему регистру
small_words = list (map (str.lower, list_words))

print('Новый список со словами приведеными к нижнему регистру:')
print(small_words)

print()
print('Задача 5.')
small_words3=[]
import pymorphy2
morph = pymorphy2.MorphAnalyzer()

for i in range(len(small_words)):
    p = list (morph.parse(small_words[i])[0])
    small_words3.append(p[2])
print('Результат лемматизации списка из задачи 3 часть 1.')
print(small_words3)
# **************************************************************************************************************
# 3) получить из list пункта 3 dict, ключами которого являются слова, а значениями их количество появлений в тексте;
# **************************************************************************************************************
print()
print('Задача 3 часть 2.')

small_words1 = small_words

j = 0
i = 0
kol = 1
dict_words = {}
dlina= len(small_words1)

while i < (len(small_words1)-1):

    if (i) < len(small_words1) and small_words1[i] == '':
         i = i + 1
    else: i=i +0

    j = i + 1
    while j < len(small_words1):
        if small_words1[i] == small_words1[j]:
            kol += 1
            small_words1[j] = ''
        j += 1
    dict_words[small_words1[i]] = kol
    kol = 1
    i = i + 1

print()
print(small_words1)
print(dict_words)
print()

# **************************************************************************************************************
# 4) вывести 5 наиболее часто встречающихся слов (sort), вывести количество разных слов в тексте (set).
# **************************************************************************************************************
print('Задача 4.')
print('Пять наиболее встречающихся слов в словаре: ')
# Определяем 5(пять) наиболее часто встречающихся слов
list_d = list(dict_words.items())
ii=0

list_d.sort( key =lambda i: i[1],reverse= True)

for i in list_d:
    if ii<5:
        print(i[0], ':', i[1])
    else: break
    ii+=1

# Определяем к-во разных слов в тексте.
set_words=set(small_words1)

print()
print('Количество разных слов в тексте равно: ', len(set_words)+1)

# **************************************************************************************************************
# 5) выполнить light с условием: в пункте 2 дополнительно к приведению к нижнему регистру выполнить лемматизацию.
# **************************************************************************************************************
# print('Задача 5.')
# small_words3=[]
# import pymorphy2
# morph = pymorphy2.MorphAnalyzer()
#
# for i in range(len(small_words1)):
#     p = list (morph.parse(small_words1[i])[0])
#     small_words3.append(p[2])
# print(small_words3)